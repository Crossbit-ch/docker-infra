version: '3'

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - "INFOMANIAK_ACCESS_TOKEN=${INFOMANIAK_ACCESS_TOKEN}"
      - "INFOMANIAK_TTL=300"
      - "INFOMANIAK_PROPAGATION_TIMEOUT=300"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "./data/traefik.yml:/traefik.yml:ro"
      - "./data/acme.json:/acme.json"
      - "./data/acme-le.json:/acme-le.json"
      - "./data/config.yml:/config.yml"
      - "/var/log/traefik/:/log/"
    labels:
      # Default labels, no changes needed
      - "traefik.docker.network=proxy"                                                                                          # Set Traefik network
      - "traefik.enable=true"                                                                                                   # Enable Traefik on this Docker Container
      - "traefik.http.routers.${TRAEFIK_SERVICE}.entrypoints=https"                                                             # Set entrypoint to HTTPS
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls=true"                                                                      # Enable TLS, we're on HTTPS

      # These labels can or should be changed, service name label is missing due to special one for traefik
      - "traefik.http.routers.${TRAEFIK_SERVICE}.middlewares=traefikAuth@file,default@file,internal-access@file"                # Set enabled middlewares provided trough dynamic configuration
      - "traefik.http.routers.${TRAEFIK_SERVICE}.rule=Host(`${TRAEFIK_SUBSUBDOMAIN}.${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)"   # Set FQDN(s) of website
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls.options=modern@file"                                                       # Set enabled TLS options provided trough dynamic configuration 
      - "traefik.http.services.${TRAEFIK_SERVICE}.loadbalancer.server.port=80"                                                  # Set loadbalancing Port and corresponding Service name

      # Specific Traefik container labels, do not copy to other containers
      - "traefik.http.routers.${TRAEFIK_SERVICE}.service=api@internal"                                                          # Special service name for traefik
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls.certresolver=infomaniak"                                                   # We're using Infomaniak as a cert authority
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls.domains[0].main=crossbit.ch"                                               # Set crossbit main cert 
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls.domains[0].sans=*.crossbit.ch"                                             # Set crossbit sans cert(s)
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls.domains[1].main=local.crossbit.ch"                                         # Set local.crossbit main cert 
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls.domains[1].sans=*.local.crossbit.ch"                                       # Set local.crossbit sans cert(s)

  # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
  # See: https://doc.traefik.io/traefik/providers/docker/#docker-api-access
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    restart: always
    networks:
      - proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      - EVENTS=1
      - PING=1
      - VERSION=1
      - AUTH=0
      - SECRETS=0
      - POST=0
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=0 # Portainer
      - INFO=0 # Portainer
      - NETWORKS=0 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=0 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=0 # Portainer
      - VOLUMES=0 # Portainer

networks:
  proxy:
    external: true
