version: '3'
services:
  netdata:
    image: netdata/netdata:stable
    container_name: netdata
    hostname: "${TRAEFIK_SUBSUBDOMAIN}.${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}"                                                  # Set to FQDN of host
    networks:
      - proxy
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    environment:
      - PGID=116
    labels:
      # Default labels, no changes needed
      - "traefik.docker.network=proxy"                                                                                          # Set Traefik network
      - "traefik.enable=true"                                                                                                   # Enable Traefik on this Docker Container
      - "traefik.http.routers.${TRAEFIK_SERVICE}.entrypoints=https"                                                             # Set entrypoint to HTTPS
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls=true"                                                                      # Enable TLS, we're on HTTPS
      
      # Internal
      - "traefik.http.routers.${TRAEFIK_SERVICE}.service=${TRAEFIK_SERVICE}"                                                    # Set service name
      - "traefik.http.routers.${TRAEFIK_SERVICE}.middlewares=default@file,internal-access@file"                                 # Set enabled middlewares provided trough dynamic configuration
      - "traefik.http.routers.${TRAEFIK_SERVICE}.rule=Host(`${TRAEFIK_SUBSUBDOMAIN}.${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)"   # Set FQDN(s) of website
      - "traefik.http.routers.${TRAEFIK_SERVICE}.tls.options=intermediate@file"                                                 # Set enabled TLS options provided trough dynamic configuration 
      - "traefik.http.services.${TRAEFIK_SERVICE}.loadbalancer.server.port=19999"                                               # Set loadbalancing Port and corresponding Service name

      # External, via Authentik forward-auth
      - "traefik.http.routers.${TRAEFIK_SERVICE}-fwauth.service=${TRAEFIK_SERVICE}"
      - "traefik.http.routers.${TRAEFIK_SERVICE}-fwauth.middlewares=default@file,authentik@file"
      - "traefik.http.routers.${TRAEFIK_SERVICE}-fwauth.rule=Host(`${TRAEFIK_SUBSUBDOMAIN}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.${TRAEFIK_SERVICE}-fwauth.tls.options=intermediate@file"

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:

networks:
  proxy:
    external: true
